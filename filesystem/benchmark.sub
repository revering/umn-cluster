# benchmark.sub - submit description file for FS benchmarking
#   we utilize condor_submit's ability to input variables on the command line
#   to make the single submit file operational for our four cases
#
# USAGE:
#   condor_submit dir=/full/path/to/input/ [optional inputs] benchmark.sub
#
# INPUTS:
#   dir         : Defined to full dir path of files to read
#   cp_to_local : Defined to anything if the file should be copied 
#                 to local scratch space before reading
#   tree_name   : Defined to be the name of the tree in the file to read

# general definitions, same for all UMN submit scripts
universe     = vanilla
+CondorGroup = "cmsfarm"
nice_user    = yes
scratch      = /export/scratch/users
local        = /data/cmszfs1/user
hdfs         = /mnt/hdfs/phys/cms/user
next_job_start_delay = 5

# requirements on runner
requirements = Machine != "zebra01.spa.umn.edu" && Machine != "zebra02.spa.umn.edu" && Machine != "zebra03.spa.umn.edu" && Machine != "zebra04.spa.umn.edu"

# hold a job if it exits with a non-zero exit status
on_exit_hold = ExitCode != 0
on_exit_hold_subcode = ExitCode
on_exit_hold_reason  = "Script exited with non-zero exit code (code in HoldReasonSubCode)"

# executable we are running
executable = /usr/bin/singularity
transfer_executable = no

image  = $(local)/eichl008/ldmx/ldmx_dev_v2.0.sif
script = $(local)/eichl008/umn-server/filesystem/reader.py

if defined cp_to_local
  cp_opt = --cp_to_local
else
  cp_opt = 
endif

if defined tree_name
  tree_opt = --tree_name $(tree_name)
else
  tree_opt = --tree_name ggNtuplizer/EventTree
endif

# command line arguments to executable
arguments  = "run --no-home --bind $(scratch),$(local),$(hdfs) --cleanenv $(image) . python3 $(script) $(datafile) $(cp_opt) $(tree_opt)"

job_name = benchmark-$(Cluster).$(Process)
output = $(job_name).json
if defined debug
  log    = $(job_name).log
  error  = $(job_name).err
endif
should_transfer_files   = yes
when_to_transfer_output = on_exit

queue datafile matching files $(dir)/**.root
